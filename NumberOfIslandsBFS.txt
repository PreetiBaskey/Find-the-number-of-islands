#include<bits/stdc++.h>
using namespace std;

void BFS(vector<vector<int>> &grid, vector<vector<int>> &visited, int r, int c) {
    int n = grid.size();
    int m = grid[0].size();
    int row = r;
    int col = c;
    visited[row][col] = 1;
    
    queue<pair<int, int>> q;
    q.push({row, col});
    
    while(!q.empty()) {
        int row = q.front().first;
        int col = q.front().second;
        q.pop();
        for(int delrow = -1; delrow <= 1; delrow++) {
            for(int delcol = -1; delcol <= 1; delcol++) {
                int nrow = row + delrow;
                int ncol = col + delcol;
                if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m && grid[nrow][ncol] == 1 && !visited[nrow][ncol]) {
                    q.push({nrow, ncol});
                    visited[nrow][ncol] = 1;
                }
            }
        }
    }
}

int getNumberOfIslands(vector<vector<int>> &grid) {
    int n = grid.size();
    int m = grid[0].size();
    
    int count = 0;
    vector<vector<int>> visited(n, vector<int>(m, 0));
    
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            if(grid[i][j] == 1 && !visited[i][j]) {
                BFS(grid, visited, i, j);
                count++;
            }
        }
    }
    return count;
}

int main() {
    
    int n = 5, m = 4;
    
    vector<vector<int>> grid(n, vector<int>(m));
    
    for(int i = 0; i < n; i++) {
        cout<<"Enter "<<i + 1<<" row :- ";
        for(int j = 0; j < m; j++) {
            cin>>grid[i][j];
        }
        cout<<endl;
    }
    
    cout<<"2 D grid is : "<<endl;
    for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
    
    cout<<"Number of islands are :- "<<getNumberOfIslands(grid);
    
    
    return 0;
}